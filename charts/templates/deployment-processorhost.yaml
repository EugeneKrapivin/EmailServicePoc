apiVersion: apps/v1
kind: Deployment
metadata:
  name: processorhost
  labels:
    orleans/serviceId: {{ .Values.processorService.serviceId }}
    app: processorhost
    {{- include "email-processor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.processorService.replicaCount }}
  selector:
    matchLabels:
      app: processorhost
      orleans/serviceId: email-processor-poc
  template:
    metadata:
      labels:
        app: processorhost
        orleans/serviceId: {{ .Values.processorService.serviceId }}
        orleans/clusterId: {{ .Values.processorService.clusterId }}
        {{- include "email-processor.labels" . | nindent 8 }}
      annotations:
        sidecar.opentelemetry.io/inject: "true"
    spec:
      containers:
        - name: processorhost
          image: {{ .Values.processorService.repository }}:{{ .Values.processorService.tag }}
          resources: 
            requests:
              cpu: 4
              memory: 4Gi
            limits:
              memory: 16Gi
          ports:
            - containerPort: 8080
            - containerPort: 11111
            - containerPort: 30000
          env:
            - name: DOTNET_DiagnosticPorts
              value: /diag/dotnet-monitor.sock
            - name: is_k8s
              value: "true"
            - name: Azure__AzureStorageConnectionString
              valueFrom:
                secretKeyRef:
                  name: azure-storage-secret
                  key: Azure__AzureStorageConnectionString
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ .Values.env.otelExporterOtlpEndpoint }}
            - name: OTEL_SERVICE_NAME
              value: {{ .Values.processorService.otelServiceName }}
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: {{ .Values.env.otelResourceAttributes }}
            - name: Kafka__Bootstrap__0
              value: {{ .Values.kafka.clusterName }}-kafka-bootstrap:9092
            # Configure settings to let Orleans know which cluster it belongs to
            # and which pod it is running in
            - name: ORLEANS_SERVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['orleans/serviceId']
            - name: ORLEANS_CLUSTER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['orleans/clusterId']
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP  
            - name: Logging__LogLevel__Default
              value: Information
            - name: Logging__LogLevel__Microsoft.AspNetCore
              value:  Warning
            - name: Logging__LogLevel__Orleans
              value:  Warning
            - name: Logging__LogLevel__Microsoft.AspNetCore.Hosting.Diagnostics
              value:  Warning
            - name: Logging__LogLevel__Microsoft.AspNetCore.Routing
              value:  Warning
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
          volumeMounts:
          - mountPath: /diag
            name: diagvol
          livenessProbe:
            httpGet:
              path: /alive
              port: 8080
            failureThreshold: 3
            periodSeconds: 30
          
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
        - name: monitor
          image: mcr.microsoft.com/dotnet/monitor
          ports:
          - containerPort: 52323
          - containerPort: 52325
          # DO NOT use the --no-auth argument for deployments in production; this argument is used for demonstration
          # purposes only in this example. Please continue reading after this example for further details.
          args: [ "collect", "--no-auth" ]
          imagePullPolicy: Always
          env:
          - name: DOTNETMONITOR_DiagnosticPort__ConnectionMode
            value: Listen
          - name: DOTNETMONITOR_Storage__DefaultSharedPath
            value: /diag
          # ALWAYS use the HTTPS form of the URL for deployments in production; the removal of HTTPS is done for
          # demonstration purposes only in this example. Please continue reading after this example for further details.
          - name: DOTNETMONITOR_Urls
            value: http://localhost:52323
          # The metrics URL is set in the CMD instruction of the image by default. However, this deployment overrides that with the args setting; manually set the URL to the same value using configuration.
          - name: DOTNETMONITOR_Metrics__Endpoints
            value: http://+:52325
          volumeMounts:
          - mountPath: /diag
            name: diagvol
          resources:
            requests:
              cpu: 50m
              memory: 32Mi
            limits:
              cpu: 250m
              memory: 256Mi
      volumes:
      - name: diagvol
        emptyDir: {}
      terminationGracePeriodSeconds: 180
  minReadySeconds: 60

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-updater
rules:
- apiGroups: [ "" ]
  resources: ["pods"]
  verbs: ["get", "watch", "list", "patch", "delete", "update", "create"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-updater-binding
subjects:
- kind: ServiceAccount
  name: default
  apiGroup: ''
roleRef:
  kind: Role
  name: pod-updater
  apiGroup: ''